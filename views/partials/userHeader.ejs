<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>EduNexus Dashboard</title>

  <!-- Font Awesome -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

  <!-- Custom Styles -->
  <link rel="stylesheet" href="/css/dstyle.css" />
  <style>
    /* Profile image rounded */
    #profile-img {
      width: 40px;
      height: 40px;
      border-radius: 50%;
      object-fit: cover;
      border: 2px solid #eee;
    }

    .user-info {
      display: flex;
      align-items: center;
      gap: 10px;
    }

    .user-info span {
      font-weight: 500;
      color: #333;
    }

    /* Enhanced Search Styles */
    .search-container {
      position: relative;
      display: flex;
      align-items: center;
      gap: 8px;
    }

    .search-btn {
      background: #667eea;
      color: white;
      border: none;
      padding: 8px 12px;
      border-radius: 6px;
      cursor: pointer;
      transition: background 0.3s ease;
      display: flex;
      align-items: center;
      gap: 5px;
    }

    .search-btn:hover {
      background: #5a67d8;
    }

    /* Enhanced Notification Dropdown Styles */
    .notification-container {
      position: relative;
    }

    .notification-badge {
      position: absolute;
      top: -5px;
      right: -5px;
      background: #ff4757;
      color: white;
      border-radius: 50%;
      width: 18px;
      height: 18px;
      font-size: 0.7rem;
      display: flex;
      align-items: center;
      justify-content: center;
      font-weight: 600;
      animation: pulse 2s infinite;
      z-index: 10;
    }

    .notification-badge:empty,
    .notification-badge[data-count="0"] {
      display: none !important;
    }

    @keyframes pulse {
      0% { transform: scale(1); }
      50% { transform: scale(1.1); }
      100% { transform: scale(1); }
    }

    .notification-dropdown {
      position: absolute;
      top: calc(100% + 10px);
      right: 0;
      width: 380px;
      max-height: 500px;
      background: white;
      border-radius: 12px;
      box-shadow: 0 10px 40px rgba(0,0,0,0.15);
      border: 1px solid #e9ecef;
      z-index: 1000;
      opacity: 0;
      visibility: hidden;
      transform: translateY(-10px);
      transition: all 0.3s ease;
    }

    .notification-dropdown.show {
      opacity: 1;
      visibility: visible;
      transform: translateY(0);
    }

    .notification-header {
      padding: 20px 20px 15px;
      border-bottom: 1px solid #f1f3f4;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .notification-header h4 {
      margin: 0;
      color: #2c3e50;
      font-size: 1.1rem;
    }

    .notification-actions {
      display: flex;
      gap: 15px;
    }

    .btn-text {
      background: none;
      border: none;
      color: #667eea;
      font-size: 0.85rem;
      cursor: pointer;
      text-decoration: none;
      font-weight: 500;
      transition: color 0.3s ease;
    }

    .btn-text:hover {
      text-decoration: underline;
      color: #5a67d8;
    }

    .notification-list {
      max-height: 350px;
      overflow-y: auto;
    }

    .notification-item-mini {
      padding: 15px 20px;
      border-bottom: 1px solid #f8f9fa;
      cursor: pointer;
      transition: background-color 0.2s ease;
    }

    .notification-item-mini:hover {
      background: #f8f9fa;
    }

    .notification-item-mini.unread {
      background: #f8f9ff;
      border-left: 3px solid #667eea;
    }

    .notification-item-mini:last-child {
      border-bottom: none;
    }

    .notification-content-mini {
      display: flex;
      align-items: flex-start;
      gap: 12px;
    }

    .notification-icon-mini {
      width: 35px;
      height: 35px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 0.9rem;
      color: white;
      flex-shrink: 0;
    }

    .notification-icon-mini.booking { background: #667eea; }
    .notification-icon-mini.complaint { background: #ff6b6b; }
    .notification-icon-mini.system { background: #00b894; }
    .notification-icon-mini.facility { background: #fdcb6e; }
    .notification-icon-mini.general { background: #74b9ff; }

    .notification-text-mini {
      flex-grow: 1;
    }

    .notification-title-mini {
      font-weight: 600;
      color: #2c3e50;
      font-size: 0.9rem;
      margin-bottom: 3px;
      line-height: 1.3;
    }

    .notification-message-mini {
      color: #6c757d;
      font-size: 0.8rem;
      line-height: 1.4;
      margin-bottom: 5px;
    }

    .notification-time-mini {
      color: #9ca3af;
      font-size: 0.75rem;
    }

    .notification-empty {
      padding: 40px 20px;
      text-align: center;
      color: #6c757d;
    }

    .notification-empty i {
      font-size: 2rem;
      margin-bottom: 10px;
      color: #dee2e6;
    }

    .loading-spinner {
      padding: 30px 20px;
      text-align: center;
      color: #6c757d;
    }

    .spinner {
      display: inline-block;
      width: 20px;
      height: 20px;
      border: 3px solid #f3f3f3;
      border-top: 3px solid #667eea;
      border-radius: 50%;
      animation: spin 1s linear infinite;
      margin-right: 10px;
    }

    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }

    /* Icon button styles */
    .icon-button {
      background: none;
      border: none;
      color: #6c757d;
      font-size: 1.2rem;
      padding: 8px;
      border-radius: 50%;
      cursor: pointer;
      transition: all 0.3s ease;
      position: relative;
      width: 40px;
      height: 40px;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .icon-button:hover {
      background: #f8f9fa;
      color: #667eea;
    }

    /* Mobile responsive */
    @media (max-width: 768px) {
      .notification-dropdown {
        width: 320px;
        right: -20px;
      }
      
      .search-container {
        display: none; /* Hide search on mobile for space */
      }

      .notification-badge {
        width: 16px;
        height: 16px;
        font-size: 0.65rem;
      }
    }

    @media (max-width: 480px) {
      .notification-dropdown {
        width: 280px;
        right: -40px;
      }

      .user-info span {
        display: none; /* Hide welcome text on very small screens */
      }
    }
  </style>
</head>
<body>
  <!-- Header -->
  <header class="header">
    <div class="header-left">
      <button class="menu-toggle" id="menu-toggle">
        <i class="fas fa-bars"></i>
      </button>
      <div class="logo">EduNexus</div>
    </div>

    <div class="header-right">
      <!-- User Info -->
      <div class="user-info">
        <!-- <img src="<%= user.profile_image ? '/uploads/' + user.profile_image : '/images/profile.png' %>" 
             alt="Profile" id="profile-img"> -->
        <span id="username">Welcome, <%= user.name %></span>
      </div>      

      <!-- Enhanced Search -->
      <div class="search-container">
        <input type="text" placeholder="Search facilities, bookings..." id="search-input">
        <select class="filter-select" id="filter-select">
          <option value="all">All</option>
          <option value="facilities">Facilities</option>
          <option value="bookings">My Bookings</option>
          <option value="complaints">Complaints</option>
        </select>
        <button class="search-btn" id="search-btn" onclick="performSearch()">
          <i class="fas fa-search"></i>
        </button>
      </div>

      <!-- Enhanced Notifications with Dropdown -->
      <div class="notification-container">
        <button class="icon-button" id="notification-btn" onclick="toggleNotificationDropdown()">
          <i class="fas fa-bell"></i>
          <span class="notification-badge" id="notification-count" data-count="0">0</span>
        </button>
        
        <!-- Notification Dropdown -->
        <div class="notification-dropdown" id="notification-dropdown">
          <div class="notification-header">
            <h4><i class="fas fa-bell"></i> Notifications</h4>
            <div class="notification-actions">
              <button class="btn-text" onclick="markAllAsRead()" id="mark-all-btn">Mark all read</button>
              <a href="/user/notifications" class="btn-text">View all</a>
            </div>
          </div>
          
          <div class="notification-list" id="notification-list">
            <div class="loading-spinner">
              <div class="spinner"></div>
              Loading...
            </div>
          </div>
        </div>
      </div>

      <!-- Profile Dropdown -->
      <div class="profile-container">
        <button class="icon-button" id="profile-btn">
          <i class="fas fa-user"></i>
        </button>
        <div class="dropdown-menu" id="dropdown-menu">
          <!-- <a href="/user/profile" class="dropdown-item">
            <i class="fas fa-user-circle"></i>
            <span>Profile</span>
          </a> -->
          <a href="/auth/logout" class="dropdown-item">
            <i class="fas fa-sign-out-alt"></i>
            <span>Logout</span>
          </a>
        </div>
      </div>
    </div>
  </header>

  <!-- Sidebar -->
  <aside class="sidebar" id="sidebar">
    <ul class="sidebar-menu">
      <li class="sidebar-item">
        <a href="/user/dashboard" class="sidebar-link active">
          <i class="fas fa-home"></i>
          <span>Dashboard</span>
        </a>
      </li>
      
      <li class="sidebar-item">
        <a href="/user/facilities" class="sidebar-link">
          <i class="fas fa-building"></i>
          <span>Facilities</span>
        </a>
      </li>

      <li class="sidebar-item">
        <a href="/user/bookings" class="sidebar-link">
          <i class="fas fa-calendar-check"></i>
          <span>My Bookings</span>
        </a>
      </li>
      
      <li class="sidebar-item">
        <a href="/user/complaints" class="sidebar-link">
          <i class="fas fa-exclamation-circle"></i>
          <span>Complaints</span>
        </a>
      </li>
      
      <li class="sidebar-item">
        <a href="/user/reports" class="sidebar-link <%= title && title.includes('Reports') ? 'active' : '' %>">
          <i class="fas fa-chart-bar"></i>
          <span>Reports</span>
        </a>
      </li>

      <li class="sidebar-item">
        <a href="/user/notifications" class="sidebar-link <%= title && title.includes('Notifications') ? 'active' : '' %>">
          <i class="fas fa-bell"></i>
          <span>Notifications</span>
          <span class="notification-badge-sidebar" id="sidebar-notification-count" style="display: none;">0</span>
        </a>
      </li>
      
      <!-- <li class="sidebar-item">
        <a href="#" class="sidebar-link">
          <i class="fas fa-cog"></i>
          <span>Settings</span>
        </a>
      </li>
      
      <li class="sidebar-item">
        <a href="#" class="sidebar-link">
          <i class="fas fa-question-circle"></i>
          <span>Help & Support</span>
        </a>
      </li> -->
    </ul>
  </aside>

  <!-- Overlay for mobile -->
  <div class="overlay" id="overlay"></div>

  <!-- Main Content Placeholder -->
  <main id="main-content">
    <!-- Your dynamic dashboard content goes here -->
  </main>

  <!-- Scripts -->
  <script>
    // Global variables for notifications
    let notificationDropdown = null;
    let notificationList = null;
    let notificationUpdateInterval = null;

    document.addEventListener('DOMContentLoaded', () => {
      const menuToggle = document.getElementById('menu-toggle');
      const sidebar = document.getElementById('sidebar');
      const mainContent = document.getElementById('main-content');
      const overlay = document.getElementById('overlay');
      const profileBtn = document.getElementById('profile-btn');
      const dropdownMenu = document.getElementById('dropdown-menu');
      const searchInput = document.getElementById('search-input');

      // Initialize notification elements
      notificationDropdown = document.getElementById('notification-dropdown');
      notificationList = document.getElementById('notification-list');

      // Load initial notification count
      updateNotificationCount();
      
      // Set up periodic updates (every 30 seconds)
      notificationUpdateInterval = setInterval(updateNotificationCount, 30000);

      // Toggle sidebar
      menuToggle.addEventListener('click', () => {
        sidebar.classList.toggle('open');
        mainContent.classList.toggle('sidebar-open');
        overlay.classList.toggle('active');
      });

      // Close sidebar when clicking on overlay
      overlay.addEventListener('click', () => {
        sidebar.classList.remove('open');
        mainContent.classList.remove('sidebar-open');
        overlay.classList.remove('active');
      });

      // Toggle profile dropdown
      profileBtn.addEventListener('click', (e) => {
        e.stopPropagation();
        dropdownMenu.classList.toggle('show');
        // Close notification dropdown if open
        closeNotificationDropdown();
      });

      // Add Enter key functionality for search
      if (searchInput) {
        searchInput.addEventListener('keypress', function(e) {
          if (e.key === 'Enter') {
            performSearch();
          }
        });
      }

      // Close dropdowns when clicking elsewhere
      document.addEventListener('click', (e) => {
        // Close profile dropdown
        if (dropdownMenu.classList.contains('show') &&
            !dropdownMenu.contains(e.target) &&
            e.target !== profileBtn) {
          dropdownMenu.classList.remove('show');
        }

        // Close notification dropdown
        if (!e.target.closest('.notification-container')) {
          closeNotificationDropdown();
        }
      });

      // Prevent dropdowns from closing when clicking inside them
      dropdownMenu.addEventListener('click', (e) => e.stopPropagation());
      if (notificationDropdown) {
        notificationDropdown.addEventListener('click', (e) => e.stopPropagation());
      }
    });

    // Enhanced Search Function
    function performSearch() {
      const searchInput = document.getElementById('search-input');
      const filterSelect = document.getElementById('filter-select');
      const searchTerm = searchInput.value.trim();
      const searchType = filterSelect.value;
      
      if (!searchTerm) {
        alert('Please enter a search term');
        return;
      }
      
      const params = new URLSearchParams({
        q: searchTerm,
        type: searchType
      });
      
      window.location.href = `/user/search?${params.toString()}`;
    }

    // Notification Dropdown Functions
    function toggleNotificationDropdown() {
      if (notificationDropdown.classList.contains('show')) {
        closeNotificationDropdown();
      } else {
        openNotificationDropdown();
      }
    }

    function openNotificationDropdown() {
      notificationDropdown.classList.add('show');
      // Close profile dropdown if open
      document.getElementById('dropdown-menu').classList.remove('show');
      loadNotifications();
    }

    function closeNotificationDropdown() {
      notificationDropdown.classList.remove('show');
    }

    function loadNotifications() {
      // Show loading
      notificationList.innerHTML = `
        <div class="loading-spinner">
          <div class="spinner"></div>
          Loading notifications...
        </div>
      `;
      
      // Fetch recent notifications from server
      fetch('/user/notifications/api/recent')
        .then(response => {
          if (!response.ok) {
            throw new Error('Failed to fetch notifications');
          }
          return response.json();
        })
        .then(data => {
          displayNotifications(data.notifications || []);
          updateNotificationBadge(data.unreadCount || 0);
        })
        .catch(error => {
          console.error('Error loading notifications:', error);
          notificationList.innerHTML = `
            <div class="notification-empty">
              <i class="fas fa-exclamation-triangle"></i>
              <p>Failed to load notifications</p>
              <button class="btn-text" onclick="loadNotifications()" style="margin-top: 10px;">
                <i class="fas fa-refresh"></i> Try Again
              </button>
            </div>
          `;
        });
    }

    function displayNotifications(notifications) {
      if (!notifications || notifications.length === 0) {
        notificationList.innerHTML = `
          <div class="notification-empty">
            <i class="fas fa-bell-slash"></i>
            <p>No notifications yet</p>
            <small>You'll be notified about booking updates and responses to your complaints.</small>
          </div>
        `;
        return;
      }

      const notificationHTML = notifications.map(notification => `
        <div class="notification-item-mini ${!notification.is_read ? 'unread' : ''}" 
             onclick="handleNotificationClick('${notification._id}')">
          <div class="notification-content-mini">
            <div class="notification-icon-mini ${notification.type}">
              ${getNotificationIcon(notification.type)}
            </div>
            <div class="notification-text-mini">
              <div class="notification-title-mini">${escapeHtml(notification.title)}</div>
              <div class="notification-message-mini">${escapeHtml(truncateText(notification.message, 60))}</div>
              <div class="notification-time-mini">${formatTimeAgo(notification.createdAt)}</div>
            </div>
          </div>
        </div>
      `).join('');

      notificationList.innerHTML = notificationHTML;
    }

    function getNotificationIcon(type) {
      const icons = {
        booking: '<i class="fas fa-calendar-check"></i>',
        complaint: '<i class="fas fa-exclamation-circle"></i>',
        system: '<i class="fas fa-cog"></i>',
        facility: '<i class="fas fa-building"></i>',
        general: '<i class="fas fa-info-circle"></i>'
      };
      return icons[type] || icons.general;
    }

    function truncateText(text, maxLength) {
      if (!text || text.length <= maxLength) return text;
      return text.substring(0, maxLength) + '...';
    }

    function escapeHtml(text) {
      const div = document.createElement('div');
      div.textContent = text;
      return div.innerHTML;
    }

    function formatTimeAgo(dateString) {
      const date = new Date(dateString);
      const now = new Date();
      const diffMs = now - date;
      const diffMins = Math.floor(diffMs / 60000);
      const diffHours = Math.floor(diffMins / 60);
      const diffDays = Math.floor(diffHours / 24);

      if (diffMins < 1) return 'Just now';
      if (diffMins < 60) return `${diffMins}m ago`;
      if (diffHours < 24) return `${diffHours}h ago`;
      if (diffDays < 7) return `${diffDays}d ago`;
      return date.toLocaleDateString();
    }

    function updateNotificationCount() {
      fetch('/user/notifications/api/unread-count')
        .then(response => response.json())
        .then(data => {
          updateNotificationBadge(data.unread || 0);
        })
        .catch(error => {
          console.error('Error fetching notification count:', error);
        });
    }

    function updateNotificationBadge(count) {
      const headerBadge = document.getElementById('notification-count');
      const sidebarBadge = document.getElementById('sidebar-notification-count');
      
      if (headerBadge) {
        headerBadge.textContent = count;
        headerBadge.setAttribute('data-count', count);
        headerBadge.style.display = count > 0 ? 'flex' : 'none';
      }
      
      if (sidebarBadge) {
        sidebarBadge.textContent = count;
        sidebarBadge.style.display = count > 0 ? 'inline-block' : 'none';
      }

      // Update mark all read button
      const markAllBtn = document.getElementById('mark-all-btn');
      if (markAllBtn) {
        markAllBtn.style.display = count > 0 ? 'inline-block' : 'none';
      }
    }

    function handleNotificationClick(notificationId) {
      // Mark as read if unread
      fetch(`/user/notifications/read/${notificationId}`, {
        method: 'POST'
      }).then(response => {
        if (response.ok) {
          updateNotificationCount();
        }
      }).catch(error => {
        console.error('Error marking notification as read:', error);
      });
      
      // Close dropdown
      closeNotificationDropdown();
      
      // Redirect to notifications page
      window.location.href = '/user/notifications';
    }

    function markAllAsRead() {
      fetch('/user/notifications/read-all', {
        method: 'POST'
      }).then(response => {
        if (response.ok) {
          updateNotificationCount();
          loadNotifications();
        } else {
          throw new Error('Failed to mark all as read');
        }
      }).catch(error => {
        console.error('Error marking all notifications as read:', error);
        alert('Failed to mark all notifications as read. Please try again.');
      });
    }

    // Cleanup interval on page unload
    window.addEventListener('beforeunload', () => {
      if (notificationUpdateInterval) {
        clearInterval(notificationUpdateInterval);
      }
    });

    // Add some additional CSS for sidebar notification badge
    const additionalCSS = `
      <style>
        .notification-badge-sidebar {
          position: absolute;
          top: 5px;
          right: 10px;
          background: #ff4757;
          color: white;
          border-radius: 50%;
          width: 16px;
          height: 16px;
          font-size: 0.6rem;
          display: none;
          align-items: center;
          justify-content: center;
          font-weight: 600;
        }
        
        .sidebar-link {
          position: relative;
        }
      </style>
    `;
    
    document.head.insertAdjacentHTML('beforeend', additionalCSS);
  </script>
</body>
</html>
